ggplot(aes(k, tot_withinss)) +
geom_line() +
scale_x_continuous(breaks = 2:10)
sil_width <- map_dbl(2:10, function(k){
model <- pam(x = dist_demo, k = k)
model$silinfo$avg.width
})
sil_df <- data.frame(
k = 2:10,
sil_width = sil_width
)
sil_df %>%
ggplot(aes(k, sil_width)) +
geom_line() +
scale_x_continuous(breaks = 2:10)
k_clust <- kmeans(dist_demo, centers = 3)
elbow_df <- data.frame(
k = 1:10,
tot_withinss = tot_withinss
)
elbow_df %>%
ggplot(aes(k, tot_withinss)) +
geom_line() +
scale_x_continuous(breaks = 2:10)
sil_width <- map_dbl(2:10, function(k){
model <- pam(x = dist_demo, k = k)
model$silinfo$avg.width
})
sil_df <- data.frame(
k = 2:10,
sil_width = sil_width
)
sil_df %>%
ggplot(aes(k, sil_width)) +
geom_line() +
scale_x_continuous(breaks = 2:10)
k_clust <- kmeans(dist_demo, centers = 4)
ach_clustered <- mke_rc %>%
filter(school_year == max(report_cards$school_year) & !is.na(per_am_in)) %>%
mutate(cluster = as_factor(k_clust$cluster)) %>%
left_join(., schools %>% select(dpi_true_id, broad_agency_type), by = "dpi_true_id")
install.packages()
install.packages("NbClust")
elbow_df %>%
ggplot(aes(k, tot_withinss)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Elbow Method: Total Within-Cluster Sum of Square")
range(1, 10)
range(1, 10, 20)
range(1, 10, 100)
attributes(range(1, 10))
demo_rc[3:10] %>% summarise_all(sd)
dist_demo <- dist(demo_rc)
# Elbow Analysis
tot_withinss <- map_dbl(1:10, function(k) {
model = kmeans(x = dist_demo, centers = k)
model$tot.withinss
})
elbow_df <- data.frame(
k = 1:10,
tot_withinss = tot_withinss
)
elbow_df %>%
ggplot(aes(k, tot_withinss)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Elbow Method: Total Within-Cluster Sum of Square")
# Silhouette Analysis
sil_width <- map_dbl(2:10, function(k){
model <- pam(x = dist_demo, k = k)
model$silinfo$avg.width
})
sil_df <- data.frame(
k = 2:10,
sil_width = sil_width
)
sil_df %>%
ggplot(aes(k, sil_width)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Average Silhouette Method")
# Final Clustering with 3 Clusters
k_clust <- kmeans(dist_demo, centers = 3)
ach_clustered <- mke_rc %>%
filter(school_year == max(report_cards$school_year) & !is.na(per_am_in)) %>%
mutate(cluster = as_factor(k_clust$cluster)) %>%
left_join(., schools %>% select(dpi_true_id, broad_agency_type), by = "dpi_true_id")
ach_clustered <- mke_rc %>%
filter(school_year == "2018-19") %>%
mutate(cluster = as_factor(k_clust$cluster)) %>%
left_join(., schools %>% select(dpi_true_id, broad_agency_type), by = "dpi_true_id")
ach_clustered <- mke_rc %>%
filter(school_year == "2018-19") %>%
mutate(cluster = as_factor(k_clust$cluster))
c_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise_at(vars(per_am_in:per_lep, overall_score, sch_ach, sch_growth), .funs = mean, na.rm = TRUE) %>%
modify_at(vars(per_am_in:per_lep), scales::percent)
dist_demo <- dist(demo_rc)
# Elbow Analysis
tot_withinss <- map_dbl(1:10, function(k) {
model = kmeans(x = dist_demo, centers = k)
model$tot.withinss
})
elbow_df <- data.frame(
k = 1:10,
tot_withinss = tot_withinss
)
elbow_df %>%
ggplot(aes(k, tot_withinss)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Elbow Method: Total Within-Cluster Sum of Square")
# Silhouette Analysis
sil_width <- map_dbl(2:10, function(k){
model <- pam(x = dist_demo, k = k)
model$silinfo$avg.width
})
sil_df <- data.frame(
k = 2:10,
sil_width = sil_width
)
sil_df %>%
ggplot(aes(k, sil_width)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Average Silhouette Method")
# Final Clustering with 3 Clusters
k_clust <- kmeans(dist_demo, centers = 3)
ach_clustered <- mke_rc %>%
filter(school_year == "2018-19") %>%
mutate(cluster = as_factor(k_clust$cluster))
c_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise_at(vars(per_am_in:per_lep, overall_score, sch_ach, sch_growth), .funs = mean, na.rm = TRUE) %>%
modify_at(vars(per_am_in:per_lep), scales::percent)
library(cluster)
scaled_demo <- scale(demo_rc[3:10])
dist_demo <- dist(scaled_demo)
# Elbow Analysis
tot_withinss <- map_dbl(1:10, function(k) {
model = kmeans(x = dist_demo, centers = k)
model$tot.withinss
})
elbow_df <- data.frame(
k = 1:10,
tot_withinss = tot_withinss
)
elbow_df %>%
ggplot(aes(k, tot_withinss)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Elbow Method: Total Within-Cluster Sum of Square")
# Silhouette Analysis
sil_width <- map_dbl(2:10, function(k){
model <- pam(x = dist_demo, k = k)
model$silinfo$avg.width
})
sil_df <- data.frame(
k = 2:10,
sil_width = sil_width
)
sil_df %>%
ggplot(aes(k, sil_width)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Average Silhouette Method")
# Final Clustering with 3 Clusters
k_clust <- kmeans(dist_demo, centers = 3)
ach_clustered <- mke_rc %>%
filter(school_year == "2018-19") %>%
mutate(cluster = as_factor(k_clust$cluster))
c_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise_at(vars(per_am_in:per_lep, overall_score, sch_ach, sch_growth), .funs = mean, na.rm = TRUE) %>%
modify_at(vars(per_am_in:per_lep), scales::percent)
dist_demo <- dist(demo_rc)
tot_withinss <- map_dbl(1:10, function(k) {
model = kmeans(x = dist_demo, centers = k)
model$tot.withinss
})
elbow_df <- data.frame(
k = 1:10,
tot_withinss = tot_withinss
)
elbow_df %>%
ggplot(aes(k, tot_withinss)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Elbow Method: Total Within-Cluster Sum of Square")
# Silhouette Analysis
sil_width <- map_dbl(2:10, function(k){
model <- pam(x = dist_demo, k = k)
model$silinfo$avg.width
})
sil_df <- data.frame(
k = 2:10,
sil_width = sil_width
)
sil_df %>%
ggplot(aes(k, sil_width)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Average Silhouette Method")
# Final Clustering with 3 Clusters
k_clust <- kmeans(dist_demo, centers = 3)
ach_clustered <- mke_rc %>%
filter(school_year == "2018-19") %>%
mutate(cluster = as_factor(k_clust$cluster))
c_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise_at(vars(per_am_in:per_lep, overall_score, sch_ach, sch_growth), .funs = mean, na.rm = TRUE) %>%
modify_at(vars(per_am_in:per_lep), scales::percent)
n_demo <- ach_clustered %>%
group_by(cluser) %>%
summarise(N = n())
n_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise(N = n())
View(n_demo)
k_clust <- kmeans(dist_demo, centers = 2)
ach_clustered <- mke_rc %>%
filter(school_year == "2018-19") %>%
mutate(cluster = as_factor(k_clust$cluster))
n_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise(N = n())
c_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise_at(vars(per_am_in:per_lep, overall_score, sch_ach, sch_growth), .funs = mean, na.rm = TRUE) %>%
modify_at(vars(per_am_in:per_lep), scales::percent)
k_clust <- kmeans(dist_demo, centers = 3)
ach_clustered <- mke_rc %>%
filter(school_year == "2018-19") %>%
mutate(cluster = as_factor(k_clust$cluster))
n_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise(N = n())
c_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise_at(vars(per_am_in:per_lep, overall_score, sch_ach, sch_growth), .funs = mean, na.rm = TRUE) %>%
modify_at(vars(per_am_in:per_lep), scales::percent)
k_clust <- kmeans(dist_demo, centers = 3)
ach_clustered <- mke_rc %>%
filter(school_year == "2018-19") %>%
mutate(cluster = as_factor(k_clust$cluster))
n_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise(N = n())
c_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise_at(vars(per_am_in:per_lep, overall_score, sch_ach, sch_growth), .funs = mean, na.rm = TRUE) %>%
modify_at(vars(per_am_in:per_lep), scales::percent)
k_clust <- kmeans(dist_demo, centers = 3)
ach_clustered <- mke_rc %>%
filter(school_year == "2018-19") %>%
mutate(cluster = as_factor(k_clust$cluster))
n_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise(N = n())
c_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise_at(vars(per_am_in:per_lep, overall_score, sch_ach, sch_growth), .funs = mean, na.rm = TRUE) %>%
modify_at(vars(per_am_in:per_lep), scales::percent)
scaled_demo <- scale(demo_rc[3:10])
dist_demo <- dist(scaled_demo)
# Elbow Analysis
tot_withinss <- map_dbl(1:10, function(k) {
model = kmeans(x = dist_demo, centers = k)
model$tot.withinss
})
elbow_df <- data.frame(
k = 1:10,
tot_withinss = tot_withinss
)
elbow_df %>%
ggplot(aes(k, tot_withinss)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Elbow Method: Total Within-Cluster Sum of Square")
# Silhouette Analysis
sil_width <- map_dbl(2:10, function(k){
model <- pam(x = dist_demo, k = k)
model$silinfo$avg.width
})
sil_df <- data.frame(
k = 2:10,
sil_width = sil_width
)
sil_df %>%
ggplot(aes(k, sil_width)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Average Silhouette Method")
# Final Clustering with 3 Clusters
k_clust <- kmeans(dist_demo, centers = 3)
ach_clustered <- mke_rc %>%
filter(school_year == "2018-19") %>%
mutate(cluster = as_factor(k_clust$cluster))
n_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise(N = n())
c_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise_at(vars(per_am_in:per_lep, overall_score, sch_ach, sch_growth), .funs = mean, na.rm = TRUE) %>%
modify_at(vars(per_am_in:per_lep), scales::percent)
scale(demo_rc[3:10])
?scale
glimpse(dist_demo)
head(dist_demo)
?kmeans
class(k_clust)
type(k_clust)
glimpse(kmeans)
glimpse(k_clust)
str(k_clust)
install.packages(c("broom", "gmp", "RcppArmadillo", "RgoogleMaps", "rlang", "Rmpfr", "sf", "tidycensus", "tidyr", "tidyselect"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
?percent
library(scales)
?percent
server::daemon_stop()
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE
)
library(tidyverse)  # I'll use this package for data processing
library(wisconsink12)
# Create the dataframe with a wisconsink12 function
make_mke_rc()
# Process dataframe for student demographic data
demo_rc <- mke_rc %>%
select(school_year,
dpi_true_id,  # School unique identifier
starts_with("per"),  # Select student demographic variables
-c(per_choice, per_open)) %>% # Drop % Choice and % Open Enrollment
filter(school_year == "2018-19")
# scale() will scale our data
scaled_demo <- scale(demo_rc[3:10])
# dist() wills calculate dist object
dist_demo <- dist(scaled_demo)
# Elbow Analysis
# Map over k values 1:10
tot_withinss <- map_dbl(1:10, function(k) {
model = kmeans(x = dist_demo, centers = k)
model$tot.withinss
})
# Create df with WSS values for each iteration
elbow_df <- data.frame(
k = 1:10,
tot_withinss = tot_withinss
)
# Plot WSS values for each value of k
elbow_df %>%
ggplot(aes(k, tot_withinss)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Elbow Method: Total Within-Cluster Sum of Square")
# Silhouette Analysis
library(cluster)
sil_width <- map_dbl(2:10, function(k){
model <- pam(x = dist_demo, k = k)
model$silinfo$avg.width
})
sil_df <- data.frame(
k = 2:10,
sil_width = sil_width
)
sil_df %>%
ggplot(aes(k, sil_width)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
labs(title = "Average Silhouette Method")
# Final Clustering with 3 Clusters
k_clust <- kmeans(dist_demo, centers = 3)
# Create variable `cluster` to designate the cluster
# Don't forget to filter for the correct school year
# to match that data we clustered
ach_clustered <- mke_rc %>%
filter(school_year == "2018-19") %>%
mutate(cluster = as_factor(k_clust$cluster))
# Calculate the number of schools in each cluster
n_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise(N = n())
# Calculate summary statistics for each cluster
c_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise_at(vars(per_am_in:per_lep, overall_score, sch_ach, sch_growth), .funs = mean, na.rm = TRUE) %>%
modify_at(vars(per_am_in:per_lep), scales::percent, .1) %>%
modifY_at(vars(overall_score:sch_growth), round, 2)
blogdown:::serve_site()
blogdown:::serve_site()
c_demo %>%
knitr::kable(booktabs = T) %>%
kable_styling(bootstrap_options = "condensed") %>%
add_header_above(c(" " = 1, "Percent of Students" = 10, "School Report Card Scores" = 3))
c_demo <- ach_clustered %>%
group_by(cluster) %>%
summarise_at(vars(per_am_in:per_lep, overall_score, sch_ach, sch_growth), .funs = mean, na.rm = TRUE) %>%
modify_at(vars(per_am_in:per_lep), scales::percent, .1) %>%
modify_at(vars(overall_score:sch_growth), round, 1)
library(kableExtra) # Used for tables
c_demo %>%
knitr::kable(booktabs = T) %>%
kable_styling(bootstrap_options = "condensed") %>%
add_header_above(c(" " = 1, "Percent of Students" = 10, "School Report Card Scores" = 3))
c_demo %>%
select(1:11) %>%
knitr::kable(booktabs = T) %>%
kable_styling(bootstrap_options = "condensed") %>%
add_header_above(c(" " = 1, "Percent of Students" = 10, "School Report Card Scores" = 3))
c_demo %>%
select(1:11) %>%
knitr::kable(booktabs = T) %>%
kable_styling(bootstrap_options = "condensed") %>%
add_header_above(c(" " = 1, "Percent of Students" = 10))
c_demo %>%
select(1, 12:14) %>%
knitr::kable(booktabs = T) %>%
kable_styling(bootstrap_options = "condensed") %>%
add_header_above(c(" " = 1, "School Report Card Scores" = 3))
c_demo %>%
select(1:11) %>%
knitr::kable(booktabs = T, col.names = c("Cluster",
"AmerIn",
"Asian",
"Black",
"Latinx",
"NatHaw/PI",
"Two+",
"SwD",
"EcDisadv",
"LimEng")) %>%
kable_styling(bootstrap_options = "condensed") %>%
add_header_above(c(" " = 1, "Percent of Students" = 10))
c_demo %>%
select(1:11) %>%
knitr::kable(booktabs = T, col.names = c("Cluster",
"AmerIn",
"Asian",
"Black",
"Latinx",
"NatHaw/PI",
"White",
"Two+",
"SwD",
"EcDisadv",
"LimEng")) %>%
kable_styling(bootstrap_options = "condensed") %>%
add_header_above(c(" " = 1, "Percent of Students" = 10))
blogdown:::serve_site()
c_demo %>%
select(cluster, per_b_aa, per_hisp_lat, per_white, per_ed, per_swd, per_lep,
overall_score, sch_ach, sch_growth) %>%
kable_styling(bootstrap_options = "condensed") %>%
add_header_above(c(" " = 1, "Percent of Students" = 10))
c_demo %>%
select(cluster, per_b_aa, per_hisp_lat, per_white, per_ed, per_swd, per_lep,
overall_score, sch_ach, sch_growth) %>%
kable_styling(bootstrap_options = "condensed")
c_demo %>%
select(cluster, per_b_aa, per_hisp_lat, per_white, per_ed, per_swd, per_lep,
overall_score, sch_ach, sch_growth) %>%
kable(booktabs = T) %>%
kable_styling(bootstrap_options = "condensed")
c_demo %>%
select(cluster, per_b_aa, per_hisp_lat, per_white, per_ed, per_swd, per_lep,
overall_score, sch_ach, sch_growth) %>%
kable(booktabs = T) %>%
kable_styling()
c_demo %>%
select("Cluster" = cluster,
"Black" = per_b_aa,
"Hisp/Lat" = per_hisp_lat,
"White" = per_white,
"ECD" = per_ed,
"SwD" = per_swd,
"LEP" = per_lep,
"Overall" = overall_score,
"Achievement" = sch_ach,
"Growth" = sch_growth) %>%
kable(booktabs = T) %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Percent of Students" = 6, "School Report Card Scores" = 3))
blogdown:::serve_site()
blogdown:::serve_site()
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE
)
c_demo %>%
left_join(., n_demo, by = cluster) %>%
select("Cluster" = cluster,
"Black" = per_b_aa,
"Hisp/Lat" = per_hisp_lat,
"White" = per_white,
"ECD" = per_ed,
"SwD" = per_swd,
"LEP" = per_lep,
"Overall" = overall_score,
"Achievement" = sch_ach,
"Growth" = sch_growth) %>%
kable(booktabs = T) %>%
kable_styling() %>%
add_header_above(c(" " = 1, "Percent of Students" = 6, "School Report Card Scores" = 3))
daemon_server::stop()
library(ggmap)
?geocode
