summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
mutate(label = ifelse(total == max(total), day, "")),
aes(label = label, y = total, x = format(day, "%b %d, %Y"))
labeled %>%
labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
mutate(label = ifelse(total == max(total), day, "")),
aes(label = label, y = total, x = format(day, "%b %d, %Y")))
labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
mutate(label = ifelse(total == max(total), day, "")),
aes(label = label, y = total, x = date(day)))
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
mutate(label = ifelse(total == max(total), day, ""))
glimpse(max_label)
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
mutate(label = ifelse(total == max(total), day, ""))
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = date(label), y = total, x = day))
d_point_v
labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = as_date(label), y = total, x = day))
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
mutate(label = ifelse(total == max(total), day, ""))
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = as_date(label), y = total, x = day)) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
max_label
max_label %>% arrange(desc(total))
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
filter(max(total))
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
filter(total == max(total))
max_label
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = date(day), y = total, x = day)) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = date(day), y = total, x = day), nudge_y = 1) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = date(day), y = total, x = day), nudge_y = 10) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = date(day), y = total, x = day), nudge_y = 3) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = date(day), y = total, x = day), nudge_y = 5) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = date(day), y = total, x = day), nudge_y = 7) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = format(date(day), "%b %d, %Y"), y = total, x = day), nudge_y = 7) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
head(n = 5)
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = format(date(day), "%b %d, %Y"), y = total, x = day), nudge_y = 7) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
arrange(desc(total)) %>%
head(n = 5)
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = format(date(day), "%b %d, %Y"), y = total, x = day), nudge_y = 7) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
arrange(desc(total)) %>%
head(n = 5) %>%
mutate(day = wday(day))
max_label
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = paste(day, format(date(day), "%b %d, %Y"), sep = "\n"), y = total, x = day), nudge_y = 7) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
arrange(desc(total)) %>%
head(n = 5) %>%
mutate(weekday = wday(day))
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = paste(weekday, format(date(day), "%b %d, %Y"), sep = "\n"), y = total, x = day), nudge_y = 7) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
?format
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
arrange(desc(total)) %>%
head(n = 5) %>%
mutate(weekday = wday(day))
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = paste(format(weekday, "%a"), format(date(day), "%b %d, %Y"), sep = "\n"), y = total, x = day), nudge_y = 7) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = paste(format(weekday, "%a"), format(date(day), "%b %d, %Y"), sep = " "), y = total, x = day), nudge_y = 7) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
d_point_v <-labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
ggplot(aes(day, total)) +
# set alpha below 1 to show overplotting
geom_point(alpha = 0.5) +
geom_text(data = max_label,
aes(label = format(date(day), "%a, %b %d, %Y"), y = total, x = day), nudge_y = 7) +
geom_smooth(se = FALSE, color = "red", size = 0.5) +
# geom_smooth will extend below zero if we don't set limits
scale_y_continuous(limits = c(0, 130)) +
theme_minimal() +
labs(x ="", y = "Daily Count of Accidents", title = "Milwaukee Traffic Accident Reports",
subtitle = "Each point represents a daily total",
caption = "Source: data.milwaukee.gov.")
d_point_v
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
arrange(desc(total)) %>%
head(n = 5) %>%
mutate(weekday = wday(day))
max_label
mutate(weekday = format(wday(day), "%a")
max_label <- labeled %>%
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
arrange(desc(total)) %>%
head(n = 5) %>%
mutate(weekday = format(wday(day), "%a"))
max_label <- labeled %>%
group_by(day = floor_date(CASEDATE, "day")) %>%
summarise(total = n()) %>%
arrange(desc(total)) %>%
head(n = 5) %>%
mutate(weekday = format(day, "%a"))
max_label
View(max_label)
d_point_v
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
servr::daemon_stop(1)
blogdown::serve_site()
bookdown:::mathquill()
bookdown:::mathquill()
?purl
?knitr::purl
knitr::purl("content/post/amortization_calculator/initial_post/index.Rmarkdown","content/post/amortization_calculator/initial_post/script.R", 2)
knitr::purl("content/post/amortization_calculator/initial_post/index.Rmarkdown","content/post/amortization_calculator/initial_post/script.R")
blogdown:::new_post_addin()
blogdown:::serve_site()
runApp('~/Documents/GitRepo/mortgage_calculator/shiny_app')
dummy <- data.frame(ID = c(rep("A", 10),
rep("B", 10),
rep("C", 10)),
code = c(rep(NA_character_,6),
"10",
rep("9", 3),
rep("4", 4),
rep("10",2),
rep("2", 3),
"11",
rep("1", 7),
rep("5", 3)))
dummy <-
dummy %>%
group_by(ID) %>%
mutate(time = seq_along(ID))
dummy_2 <-
dummy %>%
group_by(ID) %>%
mutate(time = seq_along(ID))
dummy_2 <-
dummy_2 %>%
pivot_wider(names_from = time,
values_from = code, names_prefix = 'time_')
View(dummy)
View(dummy_2)
dummy %>%
group_by(ID) %>%
mutate(category =
if_else( (time == max(time) & code == "11") & (10 %in% code),
Category_B,
FALSE)) %>%
View()
dummy %>%
group_by(ID) %>%
mutate(category =
if_else( (time == max(time) & code == "11") & (10 %in% code),
"Category_B",
FALSE)) %>%
View()
dummy %>%
group_by(ID) %>%
mutate(category =
if_else( (time == max(time) & code == "11") & (10 %in% code),
"Category_B",
FALSE))
dummy %>%
group_by(ID) %>%
mutate(category =
if_else( (time == max(time) & code == "11") & (10 %in% code),
"Category_B",
"FALSE"))
test <- dummy %>%
group_by(ID) %>%
mutate(category =
if_else( (time == max(time) & code == "11") & (10 %in% code),
"Category_B",
"FALSE"))
View(test)
?broom
str(mtcars)
mod <- lm(mpg ~ cyl, data = mtcars)
broom::tidy(mod)
broom::augment_columns(mod)
broom::augment_columns(mod, mtcars)
x <- 5
View(test)
test %>% mutate(test = ifelse(time %in% c(1, 2, 3), 1, 2))
test %>% mutate(test = ifelse(time == 1|2|3, 1, 2))
?ifelse
1 == 1|2|3
1 == 2|3
1 == 2 | 1 == 3
2|3
2||3
2&3
isTRUE(1)
isTRUE(2)
isTRUE(TRUE)
?|
"red"|"blue"
1|TRUE
5|TRUE
5|8
0|1
5&4
0&1
isTRUE(5)
1010 == TRUE
10011|10021|10021
ID == 10011|10021|10021
"ID" == 10011|10021|10021
str(mtcars)
row.names(mtcars)
filter(mtcars, rownames(mtcars) == "Mazda RX4")
filter(mtcars, row.names(mtcars) == "Mazda RX4")
dfs <- list("a", "b", "c")
length(dfs)
dfs[1]
?lm
balance/payment
balance <- 3815.83
payment <- 199.85
balance/payment
seq(from = balance, to = 0, by = payment)
seq(from = balance, to = 0, by = 1)
seq(from = balance, to = 0)
seq(from = balance, to = 0, by = -payment)
dates <- seq.Date(from = "2020-05-09", by = "month", length.out = length(payments))
dates <- seq.Date(from = lubridate::ymd("2020-05-09"), by = "month", length.out = length(payments))
payments <- seq(from = balance, to = 0, by = -payment)
dates <- seq.Date(from = lubridate::ymd("2020-05-09"), by = "month", length.out = length(payments))
dates
iris %>%
pivot_longer(cols = c(2:3), names_to = "1", values_to = "3")
?append
append("x", "a")
c("x", "a")
c("x", "a") == append("x", "a")
?c
?append
quantile(mtcars$mpg, probs = c(.05, .95))
?IQR
?case_when
case_when(1 > 2 ~ TRUE)
x <- 1:50
case_when(
x %% 35 == 0 ~ "fizz buzz",
x %% 5 == 0 ~ "fizz",
x %% 7 == 0 ~ "buzz",
TRUE ~ as.character(x)
)
